* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-attachment: fixed;
  /* background-image: url("../Images/ocean.jpg"); */
}

::-webkit-scrollbar {
  display: none;
}

::-webkit-scrollbar-button {
  display: none;
}

body {
  -ms-overflow-style: none;
}

.container .btn {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  padding: 70px 20px;
  gap: 25px 20px;
}

.homeBtn {
  position: fixed;
  width: 11vh;
  height: 5vh;
  left: 1vh;
  top: 1vh;
  z-index: 2;
  background: #cc5500;
  box-shadow: none;
  border-radius: 10px;
  font-size: 2vh;
  font-weight: bold;
  color: white;
}

.footer {
  position: fixed;
  left: 0;
  bottom: 0;
  width: 100%;
  text-align: center;
}


dialog {
  top: 73%;
  max-width: 100%;
  text-align: center;
  border: none;
  outline: none;
  background-color: transparent;
  opacity: 0;
  transform: scaleY(0);
  visibility: hidden;
  transition: opacity 0.7s ease-out, transform 0.7s ease-out;
  margin: 0;
  position: fixed;
  width: 100%;
}


dialog[open] {
  opacity: 1;
  transform: scaleY(1);
  visibility: visible;
}

/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
@starting-style {
  dialog[open] {
    opacity: 0;
    transform: scaleY(0);
  }
}

dialog::backdrop {
  background-color: transparent;
  transition: background-color 0.7s ease-out;
}

dialog[open]::backdrop {
  background-color: transparent;
}

.dialimage{
  display: flex;
  justify-content: center;
  align-items: center;
}

.dialread
{
  font-size: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  /* background-color: white; */
}

.dialread p
{
  color: white;
}

.image-container img
{
  display: flex;
  width: 1000px;
  height: 640px;
  object-fit: cover;
  top: 36%;
  left: 50%;
  transform: translate(-50%, -50%);
  position: absolute;
  gap: 0;
}

.border_left
{
  /* top-left | top-right | bottom-right | bottom-left */
  border-radius: 10px 0 0 10px;
}

.border_right
{
  /* top-left | top-right | bottom-right | bottom-left */
  border-radius: 0 10px 10px 0;
}

.border_all
{
  border-radius: 10px;
}